require "rdoc/task"
require "rubygems/package_task"
require "rake/testtask"
require "rake/clean"
require "rubygems"

lib = File.expand_path('../lib/', __FILE__)
$:.unshift lib unless $:.include?(lib)
require "iso8583/version"

# Some definitions that you'll need to edit in case you reuse this
# Rakefile for your own project.

SHORTNAME     = "iso8583"  # this should be the rubyforge project name
DESC          = "Ruby implementation of ISO 8583 financial messaging"
PKG_VERSION   = ISO8583::VERSION
LONG_DESC     = <<END_DESC
Ruby implementation of ISO 8583 financial messaging
END_DESC

# Specifies the default task to execute. This is often the "test" task
# and we'll change things around as soon as we have some tests.

task  :default => [:test]

# The directory to generate +rdoc+ in.
RDOC_DIR = "doc/html"

# This global variable contains files that will be erased by the `clean` task.
# The `clean` task itself is automatically generated by requiring `rake/clean`.

CLEAN << RDOC_DIR << "pkg"


# This is the task that generates the +rdoc+ documentation from the
# source files. Instantiating Rake::RDocTask automatically generates a
# task called `rdoc`.

Rake::RDocTask.new do |rd|
  # Options for documenation generation are specified inside of
  # this block. For example the following line specifies that the
  # content of the README file should be the main page of the
  # documenation.
  rd.main = "README"

  # The following line specifies all the files to extract
  # documenation from.
  rd.rdoc_files.include("README", "AUTHORS", "LICENSE", "TODO", "CHANGELOG", "bin/**/*", "lib/**/*.rb", "examples/**/*rb", "doc/*.rdoc")
  # This one specifies the output directory ...
  rd.rdoc_dir = "doc/html"

  # Or the HTML title of the generated documentation set.
  rd.title = "#{SHORTNAME}: #{DESC}"

  # These are options specifiying how source code inlined in the
  # documentation should be formatted.

  rd.options = ["--line-numbers", "--inline-source"]

  # Check:
  # `rdoc --help` for more rdoc options
  # the {rdoc documenation home}[http://www.ruby-doc.org/stdlib/libdoc/rdoc/rdoc/index.html]
  # or the documentation for the +Rake::RDocTask+ task[http://rake.rubyforge.org/classes/Rake/RDocTask.html]
end

require 'bundler'
Bundler::GemHelper.install_tasks


# This task will run the unit tests provided in files called
# `test/test*.rb`. The task itself can be run with a call to `rake test`

Rake::TestTask.new do |t|
  warn "\n[DEPRECATION] `rake test` is deprecated.  Please use `rspec` instead.\n\n"
  t.libs << "test"
  t.libs << "."
  t.ruby_opts = ["-rubygems"]
  t.test_files = FileList["test/*.rb"]
  t.verbose = true
end

begin
  require 'rspec/core/rake_task'
  RSpec::Core::RakeTask.new(:spec)
rescue LoadError
  warn "\n no rspec loadable ...?"
end


